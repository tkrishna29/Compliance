<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_ui_action">
    <sys_ui_action action="INSERT_OR_UPDATE">
        <action_name>resolved</action_name>
        <active>true</active>
        <client>true</client>
        <comments/>
        <condition>current.concern_status == "New" &amp;&amp; current.concern_raised_through == "Annual Integrity Review"</condition>
        <form_action>true</form_action>
        <form_button>true</form_button>
        <form_context_menu>false</form_context_menu>
        <form_link>false</form_link>
        <form_style/>
        <hint/>
        <list_action>false</list_action>
        <list_banner_button>false</list_banner_button>
        <list_button>false</list_button>
        <list_choice>false</list_choice>
        <list_context_menu>false</list_context_menu>
        <list_link>false</list_link>
        <list_save_with_form_button>false</list_save_with_form_button>
        <list_style/>
        <name>Resolved in Meeting</name>
        <onclick>onClick()</onclick>
        <order>120</order>
        <script><![CDATA[function onClick(){ // this is function called on the "onClick" field  
	if(g_form.getValue('compliance_notes') == '') {
		g_form.showFieldMsg('compliance_notes', 'Reason is mandatory before Cancelling this AIR Incident','error');
		return false;
	}
	else { 
	 if(confirm(getMessage("Are you sure you want to cancel this concern?"))){  
		//Check if Compliance notes is filled before ignoring the concern.
		 		gsftSubmit(null, g_form.getFormElement(), 'resolved'); // this refers to the "Action name"  		
		 }  
	 else  
		  return false; // cancel action if confirm response is false/cancel  
	}
}
if (typeof window == 'undefined')
	concernResolved();
function concernResolved() {
 var appRec = new GlideRecord('sysapproval_approver');
//	appRec.addQuery('sysapproval.number',current.number);
	appRec.addQuery('state','requested');	
	appRec.addQuery('sysapproval',current.sys_id);
	appRec.addQuery('approver',gs.getUserID());	
	appRec.query();
if(appRec.next()) {
//	gs.log("Update Status" + appRec.canWrite());
		current.approval = 'rejected';
		current.update();
		appRec.setValue('state','rejected');
//		appRec.comments= appRec.comments + current.compliance_notes;	
		appRec.update();
	
	}
}]]></script>
        <show_insert>true</show_insert>
        <show_multiple_update>false</show_multiple_update>
        <show_query>false</show_query>
        <show_update>true</show_update>
        <sys_class_name>sys_ui_action</sys_class_name>
        <sys_created_by>Krishna.Chaitanya</sys_created_by>
        <sys_created_on>2017-04-26 01:14:57</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>83ecbca6db1e36003a22fbb9af96190e</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>Resolved in Meeting</sys_name>
        <sys_overrides/>
        <sys_package display_value="Compliance" source="x_grs_compliance">f14d9178dbe3e60067b8f2f9af961914</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Compliance">f14d9178dbe3e60067b8f2f9af961914</sys_scope>
        <sys_update_name>sys_ui_action_83ecbca6db1e36003a22fbb9af96190e</sys_update_name>
        <sys_updated_by>Krishna.Chaitanya</sys_updated_by>
        <sys_updated_on>2017-04-26 01:16:43</sys_updated_on>
        <table>x_grs_compliance_integrityconcern</table>
        <ui11_compatible>true</ui11_compatible>
        <ui16_compatible>false</ui16_compatible>
    </sys_ui_action>
</record_update>
